[package]
name = "quickwit-ingest"
description = "Native distributed and replicated ingestion engine"

version.workspace = true
edition.workspace = true
homepage.workspace = true
documentation.workspace = true
repository.workspace = true
authors.workspace = true
license.workspace = true

[dependencies]
anyhow = { workspace = true }
async-trait = { workspace = true }
bytes = { workspace = true }
bytesize = { workspace = true }
dyn-clone = { workspace = true }
fail = { workspace = true, optional = true }
futures = { workspace = true }
http = { workspace = true }
itertools = { workspace = true }
mockall = { workspace = true, optional = true }
mrecordlog = { workspace = true }
once_cell = { workspace = true }
prost = { workspace = true }
rand = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true }
tonic = { workspace = true }
tower = { workspace = true }
tracing = { workspace = true }
ulid = { workspace = true }
utoipa = { workspace = true }

quickwit-actors = { workspace = true }
quickwit-cluster = { workspace = true }
quickwit-common = { workspace = true }
quickwit-config = { workspace = true }
quickwit-proto = { workspace = true }

[dev-dependencies]
itertools = { workspace = true }
mockall = { workspace = true }
rand = { workspace = true }
rand_distr = { workspace = true }
tempfile = { workspace = true }
time = { workspace = true }

quickwit-actors = { workspace = true, features = ["testsuite"] }
quickwit-cluster = { workspace = true, features = ["testsuite"] }
quickwit-common = { workspace = true, features = ["testsuite"] }
quickwit-proto = { workspace = true, features = ["testsuite"] }

[build-dependencies]
quickwit-codegen = { workspace = true }

[features]
failpoints = ["fail/failpoints"]
testsuite = ["mockall"]
